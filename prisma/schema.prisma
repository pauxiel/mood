// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
      id        String         @id @default(uuid())
      createdAt DateTime       @default(now())
      updatedAt DateTime       @updatedAt
      name      String?
      clerkId   String         @unique
      email     String         @unique
      entries   JournalEntry[]
      analysis  EntryAnalysis[]
}





model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  user      User     @relation(fields: [userId], references: [id])

  content String               @db.Text

   analysis EntryAnalysis?

 
  @@unique([userId, id])
   

}

model EntryAnalysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  mood String @db.Text
  subject String @db.Text
  negative Boolean
  summary String @db.Text
  color String @db.Text @default("#0101fe")
  sentimentScore Float

  @@unique([entryId])
  @@index([userId])
}



